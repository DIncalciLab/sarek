nextflow_pipeline {

    name "Test pipeline"
    script "../main.nf"
    tag "pipeline"
    tag "pipeline_sarek"

    test("Run with profile test") {

        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {
            // path_name_stable: All files + folders in ${params.outdir}/ with a stable name
            def path_name_stable    = UTILS.getAllFilesFromDir(params.outdir, true, UTILS.exclusionRegexesForUnstableFileNames)
            // path_snapshottable: All files in ${params.outdir}/ with stable content
            def path_snapshottable = UTILS.getAllFilesFromDir(params.outdir, false, UTILS.exclusionRegexesForUnstableFileNames + UTILS_PIPELINE.exclusionRegexesForUnstableFileContents)
            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    // Number of tasks
                    workflow.trace.tasks().size(),
                    // pipeline versions.yml file for multiqc from which Nextflow version is removed because we tests pipelines on multiple Nextflow versions
                    UTILS.removeNextflowVersion("$outputDir/pipeline_info/nf_core_sarek_software_mqc_versions.yml"),
                    // All stable path name from which we remove files with stable contents
                    (path_name_stable - path_snapshottable).collect{file -> file.getName()},
                    // All files with stable contents
                    path_snapshottable
                ).match() }
            )
        }
    }
}
